# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\leoxi\Desktop\实习\UI界面设计\UI_3.0\高兴.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import sys
class Ui_Form(QWidget):
    Form_size_change = pyqtSignal(int,int)
    def __init__(self):  
        super(Ui_Form, self).__init__()
        self.setupUi
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(450, 150)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Form)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.formLayout.setLabelAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.formLayout.setFormAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.horizontalLayout.addLayout(self.formLayout)
        self.comboBox = QtWidgets.QComboBox()
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("请选择")
        self.comboBox.addItem("basic")
        self.comboBox.addItem("inlet")
        self.comboBox.addItem("constraint")
        self.comboBox.addItem("outlet")
        self.comboBox.addItem("wall")
        self.comboBox.setMinimumSize(QtCore.QSize(0, 40))
        self.formLayout.addRow('Type:',self.comboBox)
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, 
                self.comboBox)
        self.comboBox_2 = QtWidgets.QComboBox()
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("请选择")
        self.comboBox_2.setMinimumSize(QtCore.QSize(0, 40))
        self.formLayout.addRow('Boundary Conditions:',self.comboBox_2)
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, 
                self.comboBox_2)
        self.comboBox.currentTextChanged['QString'].connect(lambda:self.test(Form))

        QtCore.QMetaObject.connectSlotsByName(Form)      

    def test(self,Form):
           
        if self.comboBox.currentText() == 'basic':
            self.initform()
            self.initcombo()
            self.comboBox_2.addItem("自定义")
            self.comboBox_2.addItem("calculated")
            self.comboBox_2.addItem("fixedValue")
            self.comboBox_2.addItem("fixedGradient")
            self.comboBox_2.addItem("zeroGradient")
            self.comboBox_2.addItem("fixedFluxPressure")
            self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.test2(Form))


        elif self.comboBox.currentText() == 'inlet':
            self.initform()
            self.initcombo()
            self.comboBox_2.addItem("自定义")
            self.comboBox_2.addItem("freestream")
            self.comboBox_2.addItem("outletInlet")
            self.comboBox_2.addItem("pressureInletOutletVelocity")
            self.comboBox_2.addItem("supersonicFreestream")
            self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.test2(Form))


        elif self.comboBox.currentText() == 'constraint':
            self.initform()
            self.initcombo()
            self.comboBox_2.addItem("自定义")
            self.comboBox_2.addItem("cyclic")
            self.comboBox_2.addItem("cyclicACMI")
            self.comboBox_2.addItem("symmetry")
            self.comboBox_2.addItem("empty")
            self.comboBox_2.addItem("processor")
            self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.test2(Form))


        elif self.comboBox.currentText() == 'outlet':
            self.initform()
            self.initcombo()
            self.comboBox_2.addItem("自定义")
            self.comboBox_2.addItem("freestream")
            self.comboBox_2.addItem("inletOutlet")
            self.comboBox_2.addItem("advective")
            self.comboBox_2.addItem("waveTransmissive")
            self.comboBox_2.addItem("supersonicFreestream")
            self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.test2(Form))
   

        elif self.comboBox.currentText() == 'wall':
            self.initform()
            self.initcombo()
            self.comboBox_2.addItem("自定义")
            self.comboBox_2.addItem("noSlip")
            self.comboBox_2.addItem("nutkWallFunction")
            self.comboBox_2.addItem("netUWallFunction")
            self.comboBox_2.addItem("kqRWallFunction")
            self.comboBox_2.addItem("epsilonWallFunction")
            self.comboBox_2.addItem("netUSpaldingWallFunction")
            self.comboBox_2.addItem("movingWallVelocity")
            self.comboBox_2.addItem("compressilbe::alphatWallFunction")
            self.initform()
            self.normalLineEdit_17 = QLineEdit()
            self.formLayout.addRow('field',self.normalLineEdit_17)
            self.normalLineEdit_17.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_17.setMinimumSize(QtCore.QSize(0, 40))
            self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.test2(Form))
        
        else:
            self.initform()
            self.initcombo()

        self.comboBox.currentTextChanged['QString'].connect(lambda:self.adj_size(Form))

    def test2(self,Form):  
      
        if self.comboBox_2.currentText() == '请选择':
            self.initform()   

        elif self.comboBox_2.currentText() == '自定义':
            self.initform()
            self.plainTextEdit = QtWidgets.QPlainTextEdit()
            self.plainTextEdit.setMinimumSize(QtCore.QSize(0, 40))
            self.formLayout.addRow('user-defined:',self.plainTextEdit)
            self.plainTextEdit.setPlainText(
    '''
type            uniformFixedValue;
uniformValue    coded;

name            pulse;

codeInclude
#{
    #include "mathematicalConstants.H"
#};

code
#{
    return vector
    (
        0.5*(1 - cos(constant::mathematical::twoPi*min(x/0.3, 1))),
        0,
        0
    );
#};
    ''')

        elif self.comboBox_2.currentText() == 'calculated':
            self.initform()
            self.normalLineEdit = QLineEdit()
            self.normalLineEdit.setMinimumSize(QtCore.QSize(0, 40))
            self.formLayout.addRow('value:',self.normalLineEdit)
            self.normalLineEdit.setPlaceholderText("Vector:(0 0 0), Scalar:0")

        elif self.comboBox_2.currentText() == 'fixedValue':
            self.initform()
            self.normalLineEdit_2 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_2)
            self.normalLineEdit_2.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_2.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'fixedGradient':
            self.initform()
            self.normalLineEdit_3 = QLineEdit()
            self.formLayout.addRow('gradient:',self.normalLineEdit_3)
            self.normalLineEdit_3.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_3.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'zeroGradient':
            self.initform()
    

        elif self.comboBox_2.currentText() == 'fixedFluxPressure':
            self.initform()
            self.normalLineEdit_4 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_4)
            self.normalLineEdit_4.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_5 = QLineEdit()
            self.formLayout.addRow('gradient:',self.normalLineEdit_5)
            self.normalLineEdit_5.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_4.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_5.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'freestream':
            self.initform()
            self.normalLineEdit_6 = QLineEdit()
            self.formLayout.addRow('freestreamValue:',self.normalLineEdit_6)
            self.normalLineEdit_6.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_6.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'outletInlet':
            self.initform()
            self.normalLineEdit_7 = QLineEdit()
            self.formLayout.addRow('inletValue',self.normalLineEdit_7)
            self.normalLineEdit_7.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_8 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_8)
            self.normalLineEdit_8.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_7.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_8.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'pressureInletOutletVelocity':
            self.initform()
            self.normalLineEdit_9 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_9)
            self.normalLineEdit_9.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_9.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'kqRWallFunction':
            self.initform()
            self.normalLineEdit_9 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_9)
            self.normalLineEdit_9.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_9.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'nutkWallFunction':
            self.initform()
            self.normalLineEdit_9 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_9)
            self.normalLineEdit_9.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_9.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'epsilonWallFunction':
            self.initform()
            self.normalLineEdit_9 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_9)
            self.normalLineEdit_9.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_9.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'supersonicFreestream':
            self.initform()
            self.normalLineEdit_10 = QLineEdit()
            self.formLayout.addRow('UInf',self.normalLineEdit_10)
            self.normalLineEdit_10.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_11 = QLineEdit()
            self.formLayout.addRow('pInf',self.normalLineEdit_11)
            self.normalLineEdit_11.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_12 = QLineEdit()
            self.formLayout.addRow('TInf',self.normalLineEdit_12)
            self.normalLineEdit_12.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_13 = QLineEdit()
            self.formLayout.addRow('gamma',self.normalLineEdit_13)
            self.normalLineEdit_13.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_14 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_14)
            self.normalLineEdit_14.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_10.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_11.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_12.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_13.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_14.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'inletOutlet':
            self.initform()
            self.normalLineEdit_15 = QLineEdit()
            self.formLayout.addRow('inletValue',self.normalLineEdit_15)
            self.normalLineEdit_15.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_16 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_16)
            self.normalLineEdit_16.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_15.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_16.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'advective':
            self.initform()
            self.normalLineEdit_17 = QLineEdit()
            self.formLayout.addRow('field',self.normalLineEdit_17)
            self.normalLineEdit_17.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_18 = QLineEdit()
            self.formLayout.addRow('gamma',self.normalLineEdit_18)
            self.normalLineEdit_18.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_19 = QLineEdit()
            self.formLayout.addRow('fieldInf',self.normalLineEdit_19)
            self.normalLineEdit_19.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_20 = QLineEdit()
            self.formLayout.addRow('lInf',self.normalLineEdit_20)
            self.normalLineEdit_20.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_21 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_21)
            self.normalLineEdit_21.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_17.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_18.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_19.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_20.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_21.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'waveTransmissive':
            self.initform()
            self.normalLineEdit_22 = QLineEdit()
            self.formLayout.addRow('field',self.normalLineEdit_22)
            self.normalLineEdit_22.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_23 = QLineEdit()
            self.formLayout.addRow('gamma',self.normalLineEdit_23)
            self.normalLineEdit_23.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_24 = QLineEdit()
            self.formLayout.addRow('fieldInf',self.normalLineEdit_24)
            self.normalLineEdit_24.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_25 = QLineEdit()
            self.formLayout.addRow('lInf',self.normalLineEdit_25)
            self.normalLineEdit_25.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_26 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_26)
            self.normalLineEdit_22.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_23.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_24.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_25.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_26.setMinimumSize(QtCore.QSize(0, 40))
        
        elif self.comboBox_2.currentText() == 'supersonicFreestream':
            self.initform()
            self.normalLineEdit_27 = QLineEdit()
            self.formLayout.addRow('UInf',self.normalLineEdit_27)
            self.normalLineEdit_27.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_28 = QLineEdit()
            self.formLayout.addRow('pInf',self.normalLineEdit_28)
            self.normalLineEdit_28.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_29 = QLineEdit()
            self.formLayout.addRow('TInf',self.normalLineEdit_29)
            self.normalLineEdit_29.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_30 = QLineEdit()
            self.formLayout.addRow('gamma',self.normalLineEdit_30)
            self.normalLineEdit_30.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_31 = QLineEdit()
            self.formLayout.addRow('value',self.normalLineEdit_31)
            self.normalLineEdit_31.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_27.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_28.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_29.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_30.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_31.setMinimumSize(QtCore.QSize(0, 40))

        elif self.comboBox_2.currentText() == 'compressilbe::alphatWallFunction':
            self.initform()
            self.normalLineEdit_32 = QLineEdit()
            self.formLayout.addRow('value:',self.normalLineEdit_32)
            self.normalLineEdit_32.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_33 = QLineEdit()
            self.formLayout.addRow('Prt',self.normalLineEdit_33)
            self.normalLineEdit_33.setPlaceholderText("Vector:(0 0 0), Scalar:0")
            self.normalLineEdit_32.setMinimumSize(QtCore.QSize(0, 40))
            self.normalLineEdit_33.setMinimumSize(QtCore.QSize(0, 40))

        else:
            self.initform()
        self.comboBox_2.currentTextChanged['QString'].connect(lambda:self.adj_size(Form))
        

    def adj_size(self,Form):
        row = self.formLayout.count()/2
        Form.setFixedHeight(50+row*40)
        self.Form_size_change.emit(Form.height(),row)


    def initform(self):  
        while self.formLayout.count() != 4:
            self.formLayout.removeRow(2)
    
    def initcombo(self):  
        if self.comboBox_2.count() == 0:
            pass
        else:
            while self.comboBox_2.count() != 1:
                self.comboBox_2.removeItem(1)
    

if __name__ == '__main__':  
    app = QApplication(sys.argv) 
    MainDialog = QDialog() 
    myDialog = Ui_Form()
    myDialog.setupUi(MainDialog)
    MainDialog.show()
    sys.exit(app.exec_()) 
