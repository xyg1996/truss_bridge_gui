# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'H:\NSCC\UI\field\FieldsettingUi.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import *
###
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5 import *
from ..commonfunction import *

# working_dir_name = '/usr/sw-cluster/simforge/PFsalome/SALOME-9.4.0-CO7-SRC/BINARIES-CO7/ASTERSTUDY/lib/python3.6/site-packages/asterstudy/workingdirectory'
# pimplefoam_root = '/usr/sw-cluster/simforge/PFsalome/SALOME-9.4.0-CO7-SRC/BINARIES-CO7/ASTERSTUDY/lib/python3.6/site-packages/asterstudy'

# Sim_mod = "laminar"
# Tur_mod = "laminar"
# wall_func = 'on'

para_dirt = {
    "laminar":
    {
        "laminar":["U:","p:"]
    },
    "RAS":
    {
        'kEpsilon':["U:","p:","k:","epsilon:","nut:"],
        'kOmegaSST':["U:","p:","k:","omega:","nut:"],
        'SpalartAllmaras':["U:","p:","nuTilda:","nut:"],
        'LaunderSharmaKE':["U:","p:","k:","epsilon:","nut:"],
    },
    "LES":
    {
        'kEqn':["U:","p:","k:","epsilon:","nut:"],
        'SpalartAllmarasDDES':["U:","p:","k:","nut:"],
        'Smagorinsky':["U:","p:","k:","nut:"],
    }
}


class Ui_Fieldsetting(QDialog):
    def __init__(self):
        super(Ui_Fieldsetting, self).__init__()
        self.setupUi(self)
    def setupUi(self, Fieldsetting,working_dir_name=None,pimplefoam_root =None,model="laminar",turbulence_model="laminar"):
        Fieldsetting.setObjectName("Fieldsetting")
        Fieldsetting.resize(637, 401)
        Sim_mod = model
        Tur_mod = turbulence_model
        self.working_dir_name = working_dir_name
        self.pimplefoam_root = pimplefoam_root
        self.checkBox_list = []
        self.lineedit_list = []
        self.verticalLayout = QtWidgets.QVBoxLayout(Fieldsetting)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.widget_2 = QtWidgets.QWidget(Fieldsetting)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.inter_field_part = QtWidgets.QWidget()
        self.gridLayout_2 = QtWidgets.QGridLayout(self.inter_field_part)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout_3.addWidget(self.inter_field_part)
        self.gridLayout.addWidget(self.widget_2, 2, 2, 1, 1)
        self.widget = QtWidgets.QWidget(Fieldsetting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.verticalLayout_2.addLayout(self.formLayout)
        self.gridLayout.addWidget(self.widget, 0, 2, 1, 1)
        self.label = QtWidgets.QLabel(Fieldsetting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.line = QtWidgets.QFrame(Fieldsetting)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 0, 1, 3)
        self.line_2 = QtWidgets.QFrame(Fieldsetting)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout.addWidget(self.line_2, 0, 1, 1, 1)
        self.radioButton = QtWidgets.QRadioButton(Fieldsetting)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radioButton.sizePolicy().hasHeightForWidth())
        self.radioButton.setSizePolicy(sizePolicy)
        self.radioButton.setObjectName("radioButton")
        self.gridLayout.addWidget(self.radioButton, 2, 0, 1, 1)
        self.line_3 = QtWidgets.QFrame(Fieldsetting)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout.addWidget(self.line_3, 2, 1, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout)
        self.buttonBox = QtWidgets.QDialogButtonBox(Fieldsetting)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)
        self.retranslateUi(Fieldsetting)
        self.buttonBox.accepted.connect(Fieldsetting.accept)
        self.buttonBox.rejected.connect(Fieldsetting.reject)
        QtCore.QMetaObject.connectSlotsByName(Fieldsetting)

        para_list = para_dirt[Sim_mod][Tur_mod]
        self.para_list = para_list
        for i,items in enumerate(para_list):
            self.lineEdit = QtWidgets.QLineEdit()
            self.lineEdit.setFixedHeight(40)
            self.formLayout.addRow(items,self.lineEdit)
            items = items.replace(':','')
            default_value = self.get_default_val(items)
            self.lineEdit.setText(default_value)
        Fieldsetting.resize(Fieldsetting.width(),len(para_list)*42+130)

        self.buttonBox.accepted.connect(lambda:self.collect_field_res(self.checkBox_list,self.lineedit_list))



    # def inter_field_setting(self,Fieldsetting,checked,para_list):
    #     if checked:
        self.comboBox = QtWidgets.QComboBox()
        self.comboBox.addItem("boxToFace")
        self.comboBox.addItem('boxToCell')
        self.comboBox.setFixedHeight(40)
        self.lineEdit_2 = QtWidgets.QLineEdit()
        self.lineEdit_2.setText('0 0 0')
        self.lineEdit_2.setFixedHeight(40)
        self.lineEdit_3 = QtWidgets.QLineEdit()
        self.lineEdit_3.setText('0 0 0')
        self.lineEdit_3.setFixedHeight(40)
        self.label_1 = QtWidgets.QLabel(Fieldsetting)
        self.label_1.setText('类型：')
        self.label_2 = QtWidgets.QLabel(Fieldsetting)
        self.label_2.setText('顶点1：')
        self.label_3 = QtWidgets.QLabel(Fieldsetting)
        self.label_3.setText('顶点2：')
        self.gridLayout_2.addWidget(self.label_1,0,0)
        self.gridLayout_2.addWidget(self.label_2,1,0)
        self.gridLayout_2.addWidget(self.label_3,2,0)
        self.gridLayout_2.addWidget(self.comboBox,0,1)
        self.gridLayout_2.addWidget(self.lineEdit_2,1,1)
        self.gridLayout_2.addWidget(self.lineEdit_3,2,1)

        for i,items in enumerate(para_list):

            self.checkBox = QtWidgets.QCheckBox()
            self.checkBox.setText(items)
            self.lineEdit_inter_field = QtWidgets.QLineEdit()
            items = items.replace(':','')
            default_value = self.get_default_val(items)
            self.lineEdit_inter_field.setText(default_value)
            self.lineEdit_inter_field.setFixedHeight(40)
            self.lineEdit_inter_field.setEnabled(False)
            self.gridLayout_2.addWidget(self.checkBox,i+3,0)
            self.gridLayout_2.addWidget(self.lineEdit_inter_field,i+3,1)
            self.checkBox.clicked['bool'].connect(self.lineEdit_inter_field.setEnabled)
            self.checkBox_list.append(self.checkBox)
            self.lineedit_list.append(self.lineEdit_inter_field)
            self.radioButton.clicked['bool'].connect(lambda:self.adj_form_size(Fieldsetting))

        self.inter_field_part.setVisible(False)
        total_height = self.formLayout.count()*21 + 130 
        Fieldsetting.resize(Fieldsetting.width(),total_height)

    def adj_form_size(self,form):
        self.inter_field_part.setVisible(self.radioButton.isChecked())
        if self.radioButton.isChecked():
            total_height = self.formLayout.count()*21 + 130 + self.gridLayout_2.count()*21
            form.setFixedHeight(total_height)
        else:
            total_height = self.formLayout.count()*21 + 130 
            form.setFixedHeight(total_height)
     

    def retranslateUi(self, Fieldsetting):
        _translate = QtCore.QCoreApplication.translate
        Fieldsetting.setWindowTitle(_translate("Fieldsetting", "Fieldsetting"))
        self.label.setText(_translate("Fieldsetting", "初始场设置"))
        self.radioButton.setText(_translate("Fieldsetting", "非均匀场设置")) 

    def get_default_val(self,items):
        if items == 'U':
            default_value = '0 0 0'
        if items == 'p':
            default_value = '1.00E+05'
        if items == 'k':
            default_value = '0.01'
        if items == 'epsilon':
            default_value = '0.05'
        if items == 'nut':
            default_value = '0'
        if items == 'omega':
            default_value = '0.1'
        if items == 'nuTilda':
            default_value = '0.05'
        return default_value 
    
    def collect_field_res(self,checkboxlist,lineedit_list):
        key_list = []
        value_list = []
        for i in range(self.formLayout.rowCount()):
            file_name = self.formLayout.itemAt(i,0).widget().text()
            file_name = file_name.replace(':','')
            key_list.append(file_name)
            value  = self.formLayout.itemAt(i,1).widget().text()
            value_list.append(value) 
            if file_name == 'U':
                value = '(' +value + ')'
            changefile(self.working_dir_name + '/0/' + file_name, 'internalField   uniform', value)

        if self.radioButton.isChecked():
            key_list.append('radioButton_is_checked')
            value_list.append('True')
            checkBox_checked_list = []
            checkBox_checked_index_list = []
            default_file_name = self.pimplefoam_root + '/alternativefile/system/setFieldsDict'
            file_name = self.working_dir_name + '/system/setFieldsDict'
            initfile(file_name,default_file_name)
            for index, items in enumerate(checkboxlist):
                if items.isChecked():
                    checkBox_checked_list.append(items)
                    checkBox_checked_index_list.append(index)
            key_list.append('boxTo')
            value_list.append(self.comboBox.currentText())
            if self.comboBox.currentText() == 'boxToFace':
                lable = 'volScalarFieldValue'
                changefile3(file_name,'regions','    boxToFace')
            else:
                lable = 'volVectorFieldValue'
                changefile3(file_name,'regions','    boxToCell')
            
            changefile3(file_name,'    ' + self.comboBox.currentText(), 
                '        box (' + self.lineEdit_2.text() + ') (' + 
                self.lineEdit_3.text() + ')')
            key_list.append('point1')
            value_list.append(self.lineEdit_2.text())
            key_list.append('point2')
            value_list.append(self.lineEdit_3.text())

            value2=''
            for i in range(len(checkBox_checked_list)):

                lable2 = checkBox_checked_list[i].text().replace(':','')
                value = self.formLayout.itemAt(checkBox_checked_index_list[i],1).widget().text()
                
                if lable2 == 'U':
                    value = '('+ value+')'                   
                
                addfile5(file_name,'defaultFieldValues',lable + ' ' + 
                    lable2, value)
                value3 = lineedit_list[checkBox_checked_index_list[i]].text()

                key_list.append(checkBox_checked_index_list[i])
                value_list.append(value3)

                if lable2 == 'U':
                    value3 = '('+ value3+')' 
                value2 += ('            ' + lable + ' ' + lable2 + ' ' +value3 + '\n')
            changefile3(file_name, '        fieldValues', value2)

        # save_to_json    
        save_to_json(self.working_dir_name,'field',key_list,value_list)

    def reload(self,dictionary,Fieldsetting):        
        key_list = list(dictionary['field'].keys())
        value_list = list(dictionary['field'].values())

        for i in range(self.formLayout.rowCount()):
            self.formLayout.itemAt(i,1).widget().setText(value_list[i])

        if 'radioButton_is_checked' in key_list:
            self.radioButton.setChecked(True)
        # self.adj_form_size(Fieldsetting)
            self.inter_field_part.setVisible(True)
            total_height = self.formLayout.count()*21 + 130 + self.gridLayout_2.count()*21
            Fieldsetting.resize(Fieldsetting.width(),total_height)
            for index,items in enumerate(key_list):
                if is_number(items):
                    self.gridLayout_2.itemAt((int(items)+1)*2+4).widget().setChecked(True)                    
                    self.gridLayout_2.itemAt((int(items)+1)*2+5).widget().setEnabled(True)
                    self.gridLayout_2.itemAt((int(items)+1)*2+5).widget().setText(value_list[index])
        else:
            total_height = self.formLayout.count()*21 + 130 
            Fieldsetting.resize(Fieldsetting.width(),total_height)

if __name__ == '__main__':  
    import sys  
    app = QApplication(sys.argv)  
    myWindow = Ui_Fieldsetting()  
    myWindow.show()  
    sys.exit(app.exec_()) 